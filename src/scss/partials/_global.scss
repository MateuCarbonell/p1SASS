@import "vars";

@mixin prefix($property, $value) {
    -webkit-#{$property}: $value;
    -moz-#{$property}: $value;
    #{$property}: $value;
}

p {
    padding: 0;
    margin: 0;
    text-align: justify;
    color: $color-normal;
    background-color: lighten($color-normal, 50%);
}

h1,
h2,
h3,
h4,
h5,
h6 {
    padding: 0;
    margin: 0;
    color: $color-normal;
    background-color: lighten($color-normal, 50%);
}

@for $i from 1 through 6 {
    .h#{$i} {
        font-size: 2em - $i * 0.2em;
    }
}
// Preguntar pq no da el tamaño que toca.

.success {
    color: $color-success;
    background-color: darken($color-success, 25%);
}

.warning {
    color: $color-warning;
    background-color: darken($color-warning, 25%);
}

.error {
    color: $color-error;
    background-color: darken($color-error, 25%);
}
// Fem de 0 a 10, per posteriorment fer *10 per treure els valors de 10 en 10 (10,20,30).
// Després els pasam a %.
// Es crea una cadena de classe ($class) basada en els valors de vermell, verd i blau generats.
// S'asigna a $class y a $class-bg els valors color i background-color respectivament.
@for $red from 0 through 10 {
    
    @for $green from 0 through 10 {

        @for $blue from 0 through 10 {
            $newRed: ($red * 10);
            $newBlue: ($blue * 10);
            $newGreen: ($green * 10);

            $redPercentatge: ($newRed * 1%);
            $greenPercentatge: ($newGreen * 1%);
            $bluePercentatge: ($newBlue * 1%);

            $class: "color-#{$newRed}-#{$newGreen}-#{$newBlue}";
            $class-bg: "colorbg-#{$newRed}-#{$newGreen}-#{$newBlue}";

            .#{$class} {
                color: rgb($redPercentatge, $greenPercentatge, $bluePercentatge);
            }
            .#{$class-bg} {
                background-color: rgb($redPercentatge, $greenPercentatge, $bluePercentatge);
            }
        }
    }
}



table {
    width: 100%;
    border-collapse: collapse;
    th {
        color: white;
        background-color: black;
        border: 1px solid black;
    }

    td {
        border: 1px solid black;
    }
}

img {
    width: 300px;
    border-radius: 45%;
    @include prefix(transition, 3s );
}
// https://lenguajecss.com/css/efectos/filtros-css/
img.grayscale {
    filter: grayscale(100%);
    
}
img.sepia {
    filter: sepia(100%);
    
}
img.blur {
    filter: blur(5px);
    
}

img.hue-rotate {
    filter: hue-rotate(150deg);
    
}

img.invert {
    filter: invert(0.8);
    
}

img.brightness {
    filter: brightness(0.5);
    
}

img.contrast {
    filter: contrast(2);
    
}
